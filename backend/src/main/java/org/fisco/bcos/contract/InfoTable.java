package org.fisco.bcos.contract;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.fisco.bcos.channel.client.TransactionSucCallback;
import org.fisco.bcos.web3j.abi.TypeReference;
import org.fisco.bcos.web3j.abi.datatypes.DynamicArray;
import org.fisco.bcos.web3j.abi.datatypes.Function;
import org.fisco.bcos.web3j.abi.datatypes.Type;
import org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32;
import org.fisco.bcos.web3j.crypto.Credentials;
import org.fisco.bcos.web3j.protocol.Web3j;
import org.fisco.bcos.web3j.protocol.core.RemoteCall;
import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;
import org.fisco.bcos.web3j.tuples.generated.Tuple2;
import org.fisco.bcos.web3j.tuples.generated.Tuple3;
import org.fisco.bcos.web3j.tuples.generated.Tuple7;
import org.fisco.bcos.web3j.tx.Contract;
import org.fisco.bcos.web3j.tx.TransactionManager;
import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version none.
 */
@SuppressWarnings("unchecked")
public class InfoTable extends Contract {
    public static final String BINARY = "";

    public static final String ABI = "[{\"constant\":false,\"inputs\":[{\"name\":\"threePartyId\",\"type\":\"string\"},{\"name\":\"threePartyName\",\"type\":\"string\"},{\"name\":\"threePartyImg\",\"type\":\"string\"},{\"name\":\"company\",\"type\":\"string\"},{\"name\":\"result\",\"type\":\"string\"}],\"name\":\"threePartyInsert\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"foodNum\",\"type\":\"string\"}],\"name\":\"foodSelect\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"suppId\",\"type\":\"string\"},{\"name\":\"suppName\",\"type\":\"string\"},{\"name\":\"suppImg\",\"type\":\"string\"}],\"name\":\"suppInsert\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"threePartyId\",\"type\":\"string\"}],\"name\":\"threePartySelect\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"},{\"name\":\"\",\"type\":\"bytes32[]\"},{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"transId\",\"type\":\"string\"}],\"name\":\"transSelect\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"transId\",\"type\":\"string\"},{\"name\":\"carNum\",\"type\":\"string\"},{\"name\":\"driverImg\",\"type\":\"string\"}],\"name\":\"transInsert\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"retailId\",\"type\":\"string\"}],\"name\":\"retailSelect\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"foodNum\",\"type\":\"string\"},{\"name\":\"suppId\",\"type\":\"string\"},{\"name\":\"outDate\",\"type\":\"string\"},{\"name\":\"ingredient\",\"type\":\"string\"},{\"name\":\"origin\",\"type\":\"string\"},{\"name\":\"foodImg\",\"type\":\"string\"}],\"name\":\"suppAdd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"suppId\",\"type\":\"string\"}],\"name\":\"suppSelect\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"retailId\",\"type\":\"string\"},{\"name\":\"retailName\",\"type\":\"string\"},{\"name\":\"retailImg\",\"type\":\"string\"}],\"name\":\"retailInsert\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"foodNum\",\"type\":\"string\"},{\"name\":\"retailId\",\"type\":\"string\"}],\"name\":\"retailAdd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"foodNum\",\"type\":\"string\"},{\"name\":\"transId\",\"type\":\"string\"},{\"name\":\"temp\",\"type\":\"string\"}],\"name\":\"transAdd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]";

    public static final String FUNC_THREEPARTYINSERT = "threePartyInsert";

    public static final String FUNC_FOODSELECT = "foodSelect";

    public static final String FUNC_SUPPINSERT = "suppInsert";

    public static final String FUNC_THREEPARTYSELECT = "threePartySelect";

    public static final String FUNC_TRANSSELECT = "transSelect";

    public static final String FUNC_TRANSINSERT = "transInsert";

    public static final String FUNC_RETAILSELECT = "retailSelect";

    public static final String FUNC_SUPPADD = "suppAdd";

    public static final String FUNC_SUPPSELECT = "suppSelect";

    public static final String FUNC_RETAILINSERT = "retailInsert";

    public static final String FUNC_RETAILADD = "retailAdd";

    public static final String FUNC_TRANSADD = "transAdd";

    @Deprecated
    protected InfoTable(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected InfoTable(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected InfoTable(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected InfoTable(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<TransactionReceipt> threePartyInsert(String threePartyId, String threePartyName, String threePartyImg, String company, String result) {
        final Function function = new Function(
                FUNC_THREEPARTYINSERT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(threePartyId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(threePartyName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(threePartyImg), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(company), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(result)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void threePartyInsert(String threePartyId, String threePartyName, String threePartyImg, String company, String result, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_THREEPARTYINSERT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(threePartyId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(threePartyName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(threePartyImg), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(company), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(result)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String threePartyInsertSeq(String threePartyId, String threePartyName, String threePartyImg, String company, String result) {
        final Function function = new Function(
                FUNC_THREEPARTYINSERT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(threePartyId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(threePartyName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(threePartyImg), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(company), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(result)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<Tuple7<byte[], byte[], byte[], byte[], byte[], byte[], byte[]>> foodSelect(String foodNum) {
        final Function function = new Function(FUNC_FOODSELECT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(foodNum)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}, new TypeReference<Bytes32>() {}, new TypeReference<Bytes32>() {}, new TypeReference<Bytes32>() {}, new TypeReference<Bytes32>() {}, new TypeReference<Bytes32>() {}, new TypeReference<Bytes32>() {}));
        return new RemoteCall<Tuple7<byte[], byte[], byte[], byte[], byte[], byte[], byte[]>>(
                new Callable<Tuple7<byte[], byte[], byte[], byte[], byte[], byte[], byte[]>>() {
                    @Override
                    public Tuple7<byte[], byte[], byte[], byte[], byte[], byte[], byte[]> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<byte[], byte[], byte[], byte[], byte[], byte[], byte[]>(
                                (byte[]) results.get(0).getValue(), 
                                (byte[]) results.get(1).getValue(), 
                                (byte[]) results.get(2).getValue(), 
                                (byte[]) results.get(3).getValue(), 
                                (byte[]) results.get(4).getValue(), 
                                (byte[]) results.get(5).getValue(), 
                                (byte[]) results.get(6).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> suppInsert(String suppId, String suppName, String suppImg) {
        final Function function = new Function(
                FUNC_SUPPINSERT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(suppId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(suppName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(suppImg)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void suppInsert(String suppId, String suppName, String suppImg, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SUPPINSERT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(suppId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(suppName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(suppImg)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String suppInsertSeq(String suppId, String suppName, String suppImg) {
        final Function function = new Function(
                FUNC_SUPPINSERT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(suppId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(suppName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(suppImg)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<Tuple3<List<byte[]>, List<byte[]>, List<byte[]>>> threePartySelect(String threePartyId) {
        final Function function = new Function(FUNC_THREEPARTYSELECT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(threePartyId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Bytes32>>() {}, new TypeReference<DynamicArray<Bytes32>>() {}, new TypeReference<DynamicArray<Bytes32>>() {}));
        return new RemoteCall<Tuple3<List<byte[]>, List<byte[]>, List<byte[]>>>(
                new Callable<Tuple3<List<byte[]>, List<byte[]>, List<byte[]>>>() {
                    @Override
                    public Tuple3<List<byte[]>, List<byte[]>, List<byte[]>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<List<byte[]>, List<byte[]>, List<byte[]>>(
                                convertToNative((List<Bytes32>) results.get(0).getValue()), 
                                convertToNative((List<Bytes32>) results.get(1).getValue()), 
                                convertToNative((List<Bytes32>) results.get(2).getValue()));
                    }
                });
    }

    public RemoteCall<Tuple2<byte[], byte[]>> transSelect(String transId) {
        final Function function = new Function(FUNC_TRANSSELECT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(transId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}, new TypeReference<Bytes32>() {}));
        return new RemoteCall<Tuple2<byte[], byte[]>>(
                new Callable<Tuple2<byte[], byte[]>>() {
                    @Override
                    public Tuple2<byte[], byte[]> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<byte[], byte[]>(
                                (byte[]) results.get(0).getValue(), 
                                (byte[]) results.get(1).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> transInsert(String transId, String carNum, String driverImg) {
        final Function function = new Function(
                FUNC_TRANSINSERT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(transId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(carNum), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(driverImg)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void transInsert(String transId, String carNum, String driverImg, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_TRANSINSERT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(transId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(carNum), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(driverImg)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String transInsertSeq(String transId, String carNum, String driverImg) {
        final Function function = new Function(
                FUNC_TRANSINSERT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(transId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(carNum), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(driverImg)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<Tuple2<byte[], byte[]>> retailSelect(String retailId) {
        final Function function = new Function(FUNC_RETAILSELECT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(retailId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}, new TypeReference<Bytes32>() {}));
        return new RemoteCall<Tuple2<byte[], byte[]>>(
                new Callable<Tuple2<byte[], byte[]>>() {
                    @Override
                    public Tuple2<byte[], byte[]> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<byte[], byte[]>(
                                (byte[]) results.get(0).getValue(), 
                                (byte[]) results.get(1).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> suppAdd(String foodNum, String suppId, String outDate, String ingredient, String origin, String foodImg) {
        final Function function = new Function(
                FUNC_SUPPADD, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(foodNum), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(suppId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(outDate), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(ingredient), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(origin), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(foodImg)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void suppAdd(String foodNum, String suppId, String outDate, String ingredient, String origin, String foodImg, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SUPPADD, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(foodNum), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(suppId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(outDate), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(ingredient), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(origin), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(foodImg)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String suppAddSeq(String foodNum, String suppId, String outDate, String ingredient, String origin, String foodImg) {
        final Function function = new Function(
                FUNC_SUPPADD, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(foodNum), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(suppId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(outDate), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(ingredient), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(origin), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(foodImg)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<Tuple2<byte[], byte[]>> suppSelect(String suppId) {
        final Function function = new Function(FUNC_SUPPSELECT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(suppId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}, new TypeReference<Bytes32>() {}));
        return new RemoteCall<Tuple2<byte[], byte[]>>(
                new Callable<Tuple2<byte[], byte[]>>() {
                    @Override
                    public Tuple2<byte[], byte[]> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<byte[], byte[]>(
                                (byte[]) results.get(0).getValue(), 
                                (byte[]) results.get(1).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> retailInsert(String retailId, String retailName, String retailImg) {
        final Function function = new Function(
                FUNC_RETAILINSERT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(retailId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(retailName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(retailImg)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void retailInsert(String retailId, String retailName, String retailImg, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_RETAILINSERT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(retailId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(retailName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(retailImg)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String retailInsertSeq(String retailId, String retailName, String retailImg) {
        final Function function = new Function(
                FUNC_RETAILINSERT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(retailId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(retailName), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(retailImg)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> retailAdd(String foodNum, String retailId) {
        final Function function = new Function(
                FUNC_RETAILADD, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(foodNum), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(retailId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void retailAdd(String foodNum, String retailId, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_RETAILADD, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(foodNum), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(retailId)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String retailAddSeq(String foodNum, String retailId) {
        final Function function = new Function(
                FUNC_RETAILADD, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(foodNum), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(retailId)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> transAdd(String foodNum, String transId, String temp) {
        final Function function = new Function(
                FUNC_TRANSADD, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(foodNum), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(transId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(temp)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void transAdd(String foodNum, String transId, String temp, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_TRANSADD, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(foodNum), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(transId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(temp)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String transAddSeq(String foodNum, String transId, String temp) {
        final Function function = new Function(
                FUNC_TRANSADD, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(foodNum), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(transId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(temp)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    @Deprecated
    public static InfoTable load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new InfoTable(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static InfoTable load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new InfoTable(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static InfoTable load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new InfoTable(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static InfoTable load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new InfoTable(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<InfoTable> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(InfoTable.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<InfoTable> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(InfoTable.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<InfoTable> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(InfoTable.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<InfoTable> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(InfoTable.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}
